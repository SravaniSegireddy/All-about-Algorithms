// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html

class PeekingIterator implements Iterator<Integer> {
    Integer peek;
    boolean hasPeeked;
    Iterator<Integer> iterator;
	public PeekingIterator(Iterator<Integer> iterator) {
	    this.iterator = iterator;
        this.peek = null;
        this.hasPeeked = false;
	}
	
    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        if(!hasPeeked) {
            peek = iterator.next();
            hasPeeked = true;
        }
        return peek;
	}
	
	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
        if(hasPeeked){
            hasPeeked = false;
            return peek;
        }
        else 
            return iterator.next();
	}
	
	@Override
	public boolean hasNext() {
        return hasPeeked || iterator.hasNext() ;
	}
}
