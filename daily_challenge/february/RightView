/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        if(root == null) return new ArrayList<Integer>();
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.add(root);
        
        List<Integer> res = new ArrayList<Integer>();
        while(!q.isEmpty()){
            int size = q.size();
            int last = 0;
            while(size-- > 0){
                TreeNode curr = q.remove();
                last = curr.val;
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
            }
            res.add(last);
        }
        
        return res;
    }
}
